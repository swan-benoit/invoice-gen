package com.rwangum.invoice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LigneFactureAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLigneFactureAllPropertiesEquals(LigneFacture expected, LigneFacture actual) {
        assertLigneFactureAutoGeneratedPropertiesEquals(expected, actual);
        assertLigneFactureAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLigneFactureAllUpdatablePropertiesEquals(LigneFacture expected, LigneFacture actual) {
        assertLigneFactureUpdatableFieldsEquals(expected, actual);
        assertLigneFactureUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLigneFactureAutoGeneratedPropertiesEquals(LigneFacture expected, LigneFacture actual) {
        assertThat(actual)
            .as("Verify LigneFacture auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLigneFactureUpdatableFieldsEquals(LigneFacture expected, LigneFacture actual) {
        assertThat(actual)
            .as("Verify LigneFacture relevant properties")
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getQuantite()).as("check quantite").isEqualTo(expected.getQuantite()))
            .satisfies(a -> assertThat(a.getPrixUnitaireHT()).as("check prixUnitaireHT").isEqualTo(expected.getPrixUnitaireHT()))
            .satisfies(a -> assertThat(a.getTauxTVA()).as("check tauxTVA").isEqualTo(expected.getTauxTVA()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLigneFactureUpdatableRelationshipsEquals(LigneFacture expected, LigneFacture actual) {
        assertThat(actual)
            .as("Verify LigneFacture relationships")
            .satisfies(a -> assertThat(a.getFacture()).as("check facture").isEqualTo(expected.getFacture()));
    }
}
